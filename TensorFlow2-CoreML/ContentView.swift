//
//  ContentView.swift
//  FaceMash
//
//  Created by Andrew Wan on 7/14/20.
//  Copyright Â© 2020 Andrew Wan. All rights reserved.
//

import CoreML
import GameKit
import SwiftUI
import VideoToolbox

extension UIImage {
    public convenience init?(pixelBuffer: CVPixelBuffer) {
        var cgImage: CGImage?
        VTCreateCGImageFromCVPixelBuffer(pixelBuffer, options: nil, imageOut: &cgImage)

        if let cgImage = cgImage {
            self.init(cgImage: cgImage)
        } else {
            return nil
        }
    }

    static func placeholder(size: CGSize) -> UIImage? {
        UIGraphicsBeginImageContext(size)
        UIColor.red.setFill()
        UIRectFill(CGRect(x: 0, y: 0, width: size.width, height: size.height))
        let image = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()
        return image
    }
}

func createNoise(_ n: Int = 128, distribution: GKGaussianDistribution) -> MLMultiArray {
    guard let mlArray = try? MLMultiArray(shape: [n as NSNumber], dataType: .float32) else {
        fatalError("Unexpected runtime error. MLMultiArray")
    }
    for idx in (0..<n) {
        mlArray[idx] = distribution.nextUniform() as NSNumber
    }
    return mlArray
}

struct ContentView: View {

    var gan = MLModel() // autogenerated model class
    let noiseDistribution = GKGaussianDistribution(randomSource: GKRandomSource(), mean: 0, deviation: 1)

    @State var ganImage = UIImage.placeholder(size: CGSize(width: 128, height: 128))!

    var body: some View {
        Image(uiImage: ganImage).gesture(
            TapGesture().onEnded({
                let ganInput = createNoise(128, distribution: self.noiseDistribution)
                do {
                    let transformed = try self.gan.prediction(noise_in: ganInput)
                    self.ganImage = UIImage(pixelBuffer: transformed.image_out)!
                } catch {
                    print(error)
                }
            }))
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}
